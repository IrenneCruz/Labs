; Archivo:	postlab3.s
; Dispositivo:	PIC16F887
; Autor:	Irenne Cruz
; Compilador:	pic-as (v2. 30), MPLABX V5. 40
;    
; Porgrama: Contador Hexadecimal con Display y Contadr en el puerto A por timer0
; Hardware: LEDs en puerto A y puerto D, Botones en puerto B y Display en Puerto C

; Creado: 9 feb, 2022
; Última modificación: 12 feb, 2022

    
PROCESSOR 16F887
#include <xc.inc>

;configuracion de word 1
 CONFIG FOSC = INTRC_NOCLKOUT	; oscilador interno sin salidas
 CONFIG WDTE = OFF  ; reinicio repititivo del pic apagado    
 CONFIG PWRTE = ON  ; espera de 72ms al inciar habilitada
 CONFIG MCLRE = OFF ; pin MCLRE se usa como In/Out
 CONFIG CP = OFF    ; sin protección de código
 CONFIG CPD = OFF   ; sin protección de datos

 CONFIG BOREN = OFF ; sin reinicio cuando el voltaje de alimentacion baja de 4V
 CONFIG IESO = OFF  ; reinicio sin cambio de reloj de interno a externo
 CONFIG FCMEN = OFF ; cambio de reloj externo a interno si hay fallo
 CONFIG LVP = ON    ; programacion en bajo voltaje permitida
    
; configuracion word 2
 CONFIG WRT = OFF	; poteccion autoescritura por el programa apagada
 CONFIG BOR4V = BOR40V	; reinicio abajo de 4V, (BOR21V=2.1v)
   
 restart_tmr0 macro
     banksel PORTA
     movlw 207		;estableciendo valor inicial para el timer
     movwf TMR0
     bcf T0IF
     endm  
;-------------variables contadores-------------
 PSECT udata_bank0	;common memory
     cont_small: DS 1	;1 byte
     cont_big: DS 1  
    
 PSECT udata_shr	;common memory
     W_TEMP: DS 1	;1 byte
     STATUS_TEMP: DS 1    
    
;-------------vector reset-------------
 PSECT resVect, class = CODE, abs, delta=2
 ORG 00h
 resetVec:
     PAGESEL main
     goto main

;-------------vector de interrupción---------------   
 PSECT intVect, class = CODE, abs, delta=2
 ORG 04h    
 push:
     movwf W_TEMP
     swapf STATUS, W
     movwf STATUS_TEMP
    
    
 isr:
     btfsc T0IF
     call t0_intr
    
 pop:    
     swapf STATUS_TEMP, W
     movwf STATUS
     swapf W_TEMP, F
     swapf W_TEMP, W
     retfie
    
 t0_intr:
     restart_tmr0
     incf cont_big
     movf cont_big, W
     sublw 20
     btfss ZERO		; status, 2
     goto $+2
     clrf cont_big
     incf PORTA
     btfsc PORTA, 4
     clrf PORTA
     return
    
;---------------configuracion del uC---------------
 PSECT code, delta = 2, abs
 ORG 100h
 tabla:
     clrf PCLATH     ; clear al pclath
     bsf PCLATH, 0   ; pclath = 01
     andlw 0x0f
     addwf PCL	     ; PC = PCLATH + PCL
     retlw 00111111B ; 0 
     retlw 00000110B ; 1
     retlw 01011011B ; 2
     retlw 01001111B ; 3
     retlw 01100110B ; 4
     retlw 01101101B ; 5
     retlw 01111101B ; 6
     retlw 00000111B ; 7
     retlw 01111111B ; 8
     retlw 01101111B ; 9
     retlw 01110111B ; A
     retlw 01111100B ; B
     retlw 00111001B ; C
     retlw 01011110B ; D
     retlw 01111001B ; E
     retlw 01110001B ; F
 
 main:
     call config_io	; llamada a la subrutina
     call config_reloj	; configuración del reloj
     call config_tmr0
     call config_intrpt
     banksel PORTA
     clrf PORTA		; inicio en 0
     banksel PORTC 
     clrf PORTC		; inicio en 0
     banksel PORTD 
     clrf PORTD		; inicio en 0

; loop principal
 loop:
     btfsc PORTB, 0	; clear al puerto RB0
     call inc_cont	; llamada a la subrutina del contador ascendente
     btfsc PORTB, 1	; clear al puerto RB1
     call dec_cont	; llamada a la subrutina del contador descendente
     goto loop ; loop forever

 config_reloj: ;configuración del reloj con los registros del OSCCON para definir el oscilador
     banksel OSCCON
     bsf IRCF2	;OSCCON, 6 / bit 2 del IRCF en set
     bsf IRCF1	;OSCCON, 6 / bit 1 del IRCF en set 
     bcf IRCF0	;OSCCON, 6 / bit 0 del IRCF en clear y oscilador de 4MHz configurado (110)
     bsf SCS	;reloj interno en set
     return
    
 config_io:	;subrutina entradas y salidas
     bsf STATUS, 5  ;BANK 11
     bsf STATUS, 6 
     clrf ANSEL	    ;pines digitales
     clrf ANSELH 
    
     bsf STATUS,5   ; BANK 01
     bcf STATUS, 6
     clrf TRISA	    ; port a como out
     clrf TRISC	    ; port c como out
     clrf TRISD	    ; port d como out
     bsf TRISB, 0 
     bsf TRISB, 1   ;port b como in
    
     bcf STATUS, 5  ; BANK 00
     bcf STATUS, 6
 
 config_tmr0:
     banksel TRISA
     bcf T0CS	    ;este selecciona el reloj al que el timer estara ligado (0 = interno)
     bcf PSA	    ;prescaler asignado al timer0 (1 = watchdog timer)
     bsf PS2	    ;bits para el rango del prescaler 
     bsf PS1
     bsf PS0	    ;presclar asignado en 256 (111)
     restart_tmr0
     return
    
 config_intrpt:
     bsf GIE
     bsf T0IE
     bcf T0IF
     return   
    
 inc_cont:
     call delay_big	;para evitar el ruido
     btfsc PORTB, 0	;puerto 0 se hace 0
     goto $-1		;cuando se presiona el botón, el número crece
     incf PORTD, F
     btfsc PORTD, 4
     clrf PORTD
     movf PORTD, W
     call tabla
     movwf PORTC
     return
    
 dec_cont:
     call delay_big	;para evitar el ruido
     btfsc PORTB, 1	;puerto 1 se hace 0 
     goto $-1		;cuando se presiona el botón, el número disminuye
     decf PORTD, F	;decremento para port a
     btfsc PORTD, 7	;detener la cuenta si debe encenderse el puerto 7
     bcf PORTD, 4	;apagar del puerto 4 en adelante
     bcf PORTD, 5 
     bcf PORTD, 6
     bcf PORTD, 7
     movf PORTD, W
     call tabla
     movwf PORTC
     return    
    
;-------------subrutina del delay---------------
 delay_big:
     movlw 200		; valor inicial del contador
     movwf cont_big 
     call delay_small	; rutina del delay
     decfsz cont_big, 1 ; decrementar el contador
     goto $-2		; ejecutar dos lineas atras
     return
    
 delay_small:
     movlw 165		; valor inicial del contador 
     movwf cont_small 
     decfsz cont_small, 1 ; decrementar el contador
     goto $-1		  ; ejecutar linea anterior
     return
    
 END
